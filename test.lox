var startTime = clock();

// Fibonacci sequence
var i = 0;
var j = 1;
var k;
while (i < 10000) {
  print i;
  k = i;
  i = j;
  j = k + i;
}
print "That was the first part of the Fibonacci sequence!";
print "";

var sum = 0;
var upto = 100; // inclusive
for (var l = 1; l <= upto; l = l + 1) {
  sum = sum + l;
}
print "The sum of the first " + upto + " 'integers' is " + sum + ".";
if (sum == (upto * (upto + 1)) / 2) {
  print "And that's a fact!";
} else {
  print "And that's fake news!";
}

var i = 0;
while (true) {
  print "i = " + i;

  if (i > 2 and i < 5) {
    print "Continuing and incrementing";
    i = i + 1;
    continue;
  } else if (i > 10) {
    print "Breaking";
    break;
  }

  print "incrementing";
  i = i + 1;
}

print "This all took " + (clock() - startTime) + " seconds";

fun sayHi(greeting, name) {
  print greeting + ", " + name + "!";
}

sayHi("Hello", "Han");
sayHi("Howdy", "cowboy");
sayHi("'Ello", "gov'na");

fun sum(a, b) {
  return a + b;
}

print sum(21, 21);

fun max(a, b) {
  return a > b ? a : b;
}

fun min(a, b) {
  if (a < b) {
    while (true) {
      return a;
    }
  } else {
    while (true) {
      return b;
    }
  }
}


var a = 12;
var b = 14;

print min(a, b) + " is smaller than " + max(a, b);
print min(b, a) + " is smaller than " + max(b, a);

fun minClever(a, b) {
  return -max(-a, -b);
}

print minClever(a, b) + " is smaller than " + max(a, b);

fun fibon(n) {
  if (n <= 1) {
    return n;
  }
  return fibon(n - 2) + fibon(n - 1);
}

var n = 0;
var m;
while ((m = fibon(n)) < 10000) {
  print m;
  n = n + 1;
}

fun makeCounter() {
  var local = 0;
  fun count() {
    local = local + 1;
    print local;
  }
  return count;
}

var counter = makeCounter();
counter();
counter();

var a = "global";
{
  fun showA() {
    print a;
  }

  showA();
  var a = "block";
  showA();
}

class Egg {
  init(oneYolk) {
    this.yolks = 1;
    print oneYolk;
    if (oneYolk) {
      return;
    }
    this.yolks = 2;
  }
  cook() {
    print "Egg is frying!";
  }

  serve(who) {
    print "Enjoy your egg, " + who + "!";
    print "It has " + this.yolks + " yolks!";
  }
}

print Egg;

var egg = Egg(true);
print egg;
egg.cook();
egg.serve("Han");

var weirdEgg = Egg(false);
weirdEgg.serve("Han");

class Animal {
  to_string() {
    return "animal";
  }
  wave() {
    print "The " + this.to_string() +" waves.";
  }
}

class Dog < Animal {
  to_string() {
    return "dog";
  }

  wave() {
    super.wave();
    print "It also wiggles its tail and barks happily.";
  }
}

var animal = Animal();
animal.wave();
var laska = Dog();
laska.wave();
